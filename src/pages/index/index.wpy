
<template lang="wxml" miniapp="wepy">
  <view class="page-contain page-index">
    <view class="page-index__bg"></view>

    <nav :navType.sync="navType"></nav>

    <advertising
      :floatAdv.sync="floatAdv"
      :bannerAdv.sync="bannerAdv"
      :navType.sync="navType"
      :isShowFloatAdv.sync="isShowFloatAdv"
      :stage.sync="stage"
    ></advertising>

    <!-- 发现滚动活动 -->
    <activityScroll
      wx:if="{{activityList.length && navType === -1}}"
      :activityList.sync="activityList"
    ></activityScroll>

    <topicNav
      :actType.sync="actType"
      :isShowRedPoint.sync="isShowRedPoint"
      wx:if="{{navType === 'topic'}}"
    ></topicNav>
    
    <block wx:if="{{actType === 'hot' || (actType === 'follow' && userId)}}">
      <forumList
        wx:if="{{forumList.length}}"
        :lists.sync="forumList"
      ></forumList>
    </block>

    <activityList 
      :activityList.sync="activityList"
      wx:if="{{navType === 'topic' && activityList.length && actType === 'activity'}}"
    ></activityList>
    
    <mine
      :sendNum.sync="sendNum"
      :saveNum.sync="saveNum"
      :failNum.sync="failNum"
      :mineList.sync="mineList"
      wx:if="{{navType === 'topic' && actType === 'mine' && userId}}"
    ></mine>

    <block wx:if="{{!userId}}">
      <button wx:if="{{actType === 'follow' || actType === 'mine'}}" data-type="auth" open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber" class="font-size--26 auth-btn open-type-btn">{{authButtonText}}</button>
    </block>


    <videoList 
      :lists.sync="videoActivityList"
      wx:if="{{videoActivityList.length}}"
    ></videoList>
    
    <loading wx:if="{{hasMoreData}}"></loading>
    
    <view class="empty-list font-size--26" wx:if="{{!hasData}}">暂无相关数据~</view>

    <forumBtn
      :userId="userId"
      wx:if="{{actType !== 'activity' && navType === 'topic'}}"
    ></forumBtn>
    
    <silder :userId.sync="userId" :cartNum.sync="cartNum"></silder>

    <custom-tabbar wx:if="{{tabbar}}" tabbar="{{tabbar}}" isModelIPX="{{isModelIPX}}"></custom-tabbar>
    
    <guideIndex wx:if="{{stage}}" :animation.sync="animation" :stage.sync="stage"></guideIndex>


  </view>
</template>

<script>
  import wepy from 'wepy'
  import VideoList from '../../components/videoList'
  import Loading from '../../components/loading'
  import GuideIndex from '../../components/guideIndex'
  import videoApis from '../../api/video'
  import advertisementApis from '../../api/advertisement'
  import guideApis from '../../api/guide'
  import activityApis from '../../api/activity'
  import forumApis from '../../api/forum'
  import commetApis from '../../api/commet'
  import ActivityList from '../../components/activityList'
  import Silder from './modules/silder'
  import ActivityScroll from './modules/activityScroll'
  import ForumList from '../../components/forumList'
  import Mine from './modules/mine'
  import TopicNav from './modules/topicNav'
  import Nav from './modules/nav'
  import ForumBtn from './modules/forumBtn'
  import Advertising from './modules/advertising'
  import { timeHandle } from '../../utils/commentTimeHandle'
  import CommonMixin from '../../mixins/common'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '无限三维',
      enablePullDownRefresh: true,
      usingComponents: {
        'custom-tabbar': '../../custom-tab-bar/index'
      }
    }
    mixins = [CommonMixin]
    components = {
      videoList: VideoList,
      loading: Loading,
      guideIndex: GuideIndex,
      activityList: ActivityList,
      silder: Silder,
      activityScroll: ActivityScroll,
      forumList: ForumList,
      mine: Mine,
      topicNav: TopicNav,
      nav: Nav,
      advertising: Advertising,
      forumBtn: ForumBtn
    }
    computed = {
      hasData (val) {
        const { navType, activityList, videoActivityList, actType, forumList, mineList, userId } = this
        if (navType === 'topic') {
          if (actType === 'hot') {
            return forumList.length
          } else if (actType === 'follow') {
            return forumList.length || !userId
          } else if (actType === 'mine') {
            return mineList.length || !userId
          }
          return activityList.length
        } else {
          return videoActivityList.length
        }
      }
    }
    data = {
      isModelIPX: false,
      tabbar: '',
      start: 1,
      limits: 4,
      activityList: [],
      videoActivityList: [],
      hasMoreData: false, // 默认不用拉数据
      cartNum: '',
      userId: '',
      bannerAdv: '',
      stage: 0,
      animation: {},
      floatAdv: '',
      isShowFloatAdv: process.env.NODE_ENV === 'development' ? false : true,
      navType: -1, // -1 全部 1 课程  act 话题活动
      actStart: 1,
      actLimit: 5,
      actType: 'hot', // hot 热门 follow 关注 activity 活动 mine 我的
      forumStart: 1,
      forumLimit: 7,
      forumList: [],
      mineStart: 1,
      mineLimit: 7,
      mineList: [],
      nickname: '',
      saveNum: '',
      sendNum: '',
      failNum: '',
      isShowRedPoint: false, // 我的红圈
      authButtonText: '请点这里登录查看'
    }
    watch = {
      actType (val) {
        this.resetData()
        switch (val) {
          case 'hot':
          case 'follow':
            if (val === 'follow' && !this.userId) return
            this.getForumList()
            break
          case 'mine':
            if (!this.userId) return
            this.getMyForumReply()
            break
          case 'activity':
            this.getListActivity()
            break
          default:
            break
        }
      }
    }
    events = {
      handleNav (type) {
        this.navType = type
        this.resetData()
        if (this.navType === 'topic') {
          this.getForumList()
        } else if (this.navType === -1) {
          this.getListActivity()
          this.getListVideoActivity()
        } else {
          this.getListVideoActivity()
        }
      },
      handleToActivityList () {
        this.resetData()
        this.navType = 'topic'
        this.actType = 'activity'
      },
      handleToPriner () {
        wx.switchTab({url: '/pages/index/printer'})
        this.stage = 0
      },
      async handleOutStage () {
        try {
          const opts = {
            stage: 0
          }
          await guideApis.updateByPrintGuide(opts)
          this.stage = 0
          wepy.$instance.globalData.stage = 0
          this.$apply()
        } catch (error) {
          console.log(error)
        }
      }
    }
    async getMyForumReply () {
      try {
        wx.showLoading({
          title: '加载中',
          mask: true
        })
        const { data: pointDara } = await commetApis.getRedPoint()
        this.isShowRedPoint = pointDara.isShow === 1
        let { mineStart, mineLimit, mineList } = this
        const opts = {
          start: mineStart,
          limit: mineLimit
        }
        let { data } = await commetApis.getMyForumReply(opts)
        const { forumVOList, nickname, saveNum, sendNum, failNum } = data
        if (mineStart === 1) {
          mineList = []
        }
        forumVOList.data.forEach(item => {
          item.time = timeHandle(item.createTime)
        })
        this.mineList = mineList.concat(forumVOList.data)
        if (forumVOList.data.length < mineLimit) {
          this.hasMoreData = false
        } else {
          this.hasMoreData = true
          this.mineStart ++
        }
        this.nickname = nickname
        this.saveNum = saveNum
        this.sendNum = sendNum
        this.failNum = failNum
        wx.hideLoading()
        this.$apply()
      } catch (error) {
        console.log(error)
        wx.hideLoading()
      }
    }
    async getForumList () {
      try {
        wx.showLoading({
          title: '加载中',
          mask: true
        })
        let { forumStart, forumLimit, forumList, actType } = this
        const opts = {
          start: forumStart,
          limits: forumLimit
        }
        const { data } = await commetApis.getRedPoint()
        this.isShowRedPoint = data.isShow === 1
        let result
        if (actType === 'hot') {
          const { data: hotData } = await forumApis.listHotForum(opts)
          result = hotData
        } else if (actType === 'follow') {
          const { data: followData } = await forumApis.listFollowForum(opts)
          result = followData
        }
        if (forumStart === 1) {
          forumList = []
        }
        result.data.forEach(item => {
          item.time = timeHandle(item.createTime)
        })
        this.forumList = forumList.concat(result.data)
        if (this.forumList.length >= result.total) {
          this.hasMoreData = false
        } else {
          this.hasMoreData = true
          this.forumStart ++
        }
        wx.hideLoading()
        this.$apply()
      } catch (error) {
        console.log(error)
        wx.hideLoading()
      }
    }
    async getListVideoActivity () {
      try {
        wx.showLoading({
          title: '加载中',
          mask: true
        })
        let { start, limits, navType, videoActivityList } = this
        const opts = {
          start,
          limits,
          videoType: navType
        }
        let { data: indexData } = await videoApis.listVideoForum(opts)
        const { videoDOList, total, forumVOList } = indexData
        if (start === 1) {
          videoActivityList = []
        }
        forumVOList.forEach(item => {
          item.time = timeHandle(item.createTime)
        })
        if (navType === -1) {
          this.videoActivityList = [...videoActivityList, ...forumVOList, ...videoDOList]
        } else {
          this.videoActivityList = [...videoActivityList, ...videoDOList]
        }
        if (this.videoActivityList.length >= total) {
          this.hasMoreData = false
        } else {
          this.hasMoreData = true
          this.start ++
        }
        wx.hideLoading()
        this.$apply()
      } catch (error) {
        console.log(error)
        wx.hideLoading()
      }
    }
    async getAdvertisement () { // 广告位接口
      try {
        const { data: advData } = await advertisementApis.queryAdvertisements()
        this.bannerAdv = advData.filter(item => item.advertisementType === 4)[0] // 顶部banner
        this.floatAdv = advData.filter(item => item.advertisementType === 1)[0] // 浮动banner
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async getPrintGuide () { // 获取引导信息
      try {
        const { data } = await guideApis.printGuide()
        this.stage = data.stage
        wepy.$instance.globalData.stage = data.stage
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async getListActivity () { // 获取活动数据
      try {
        wx.showLoading({
          title: '加载中',
          mask: true
        })
        let { actStart, actLimit, activityList } = this
        const opts = {
          start: actStart,
          limit: actLimit
        }
        const { data: actData } = await activityApis.listActivity(opts)
        if (actStart === 1) {
          activityList = []
        }
        this.activityList = activityList.concat(actData.data)
        if (actData.data.length < actLimit) {
          this.hasMoreData = false
        } else {
          this.hasMoreData = true
          this.actStart ++
        }
        wx.hideLoading()
        this.$apply()
      } catch (error) {
        console.log(error)
        wx.hideLoading()
      }
    }
    handleAuth (userId) {
      wepy.$instance.globalData.userId = this.userId = userId
      if (this.actType === 'follow') {
        this.getForumList()
      }
      if (this.actType === 'mine') {
        this.getMyForumReply()
      }
    }
    onLoad () {
      // 隐藏系统tabbar
      wx.hideTabBar()
      wepy.$instance.editTabbar()
      this.isModelIPX = wepy.$instance.globalData.isModelIPX
      this.getListVideoActivity()
      this.getListActivity()
      this.getAdvertisement()
      this.getPrintGuide()
      wepy.$instance.globalData.subpub.on('auth', this.handleAuth, this)
      this.$apply()
    }
    resetData () {
      this.start = 1
      this.actStart = 1
      this.forumStart = 1
      this.mineStart = 1
      this.hasMoreData = false
      this.activityList = []
      this.videoActivityList = []
      this.mineList = []
      this.forumList = []
    }
    onPullDownRefresh () {
      this.resetData()
      if (this.navType === 'topic') {
        if (this.actType === 'hot' || this.actType === 'follow') {
          this.getForumList()
        } else if (this.actType === 'mine') {
          this.getMyForumReply()
        } else {
          this.getListActivity()
        }
      } else {
        this.getListVideoActivity()
        this.getListActivity()
      }
      wx.nextTick(() => {
        wx.stopPullDownRefresh()
      })
    }
    methods = {
    }
    onShareAppMessage () {
      return {
        title: '无限三维 · 让孩子创造未来',
        path: 'pages/index/index'
      }
    }
    onReachBottom () {
      if (this.hasMoreData) {
        if (this.navType === 'topic') {
          if (this.actType === 'hot' || this.actType === 'follow') {
            this.getForumList()
          } else if (this.actType === 'mine') {
            this.getMyForumReply()
          } else {
            this.getListActivity()
          }
        } else {
          this.getListVideoActivity()
        }
      }
    }
    onUnload () {
    }
    onHide () {
    }
    onShow () {
      if (wepy.$instance.globalData.userId) {
        this.userId = wepy.$instance.globalData.userId
      }
      // 1: 创建动画实例animation:
      var animation = wx.createAnimation({
        duration: 500,
        timingFunction: 'ease'
      })
      // this.animation = animation
      var next = true
      // 连续动画关键步骤
      setInterval(function () {
        // 2: 调用动画实例方法来描述动画
        if (next) {
          animation.rotate(39).step()
          next = !next
        } else {
          animation.rotate(19).step()
          next = !next
        }
        // 3: 将动画export导出，把动画数据传递组件animation的属性
        this.animation = animation.export()
        this.$apply()
      }.bind(this), 600)
    }
  }
</script>
<style lang='postcss'>
  @import 'src/styles/pages/index/common.postcss';
</style>
