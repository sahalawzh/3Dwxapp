<template lang="wxml" miniapp="wepy">
  <view class="live-page">
    <view class="live-bg"></view>
    <view class="live">
      <view class="live-header" @tap.stop="handleToCate">
        <image class="ico_livelist" mode="aspectFill" src='../../images/live/ico_livelist.png'></image>
        <view class="font-size--28">所有直播</view>
      </view>

      <view class="room-list">
        <liveList
        wx:if="{{roomList.length}}"
        :liveList.sync="roomList"></liveList>
      </view>

      <view class="live-recommed" wx:if="{{recommedList.length}}">
        <view class="live-recommed__title">精彩推荐</view>
        <view class="live-recommed__item wow-flex is-align-middle"
          @tap.stop="handleScreenVideo({{ item }})"
          wx:for="{{recommedList}}"
          wx:key="index">
          <view class="recommed-cover">
            <image mode="aspectFill" src="{{ item.coverImg }}"></image>
          </view>
          <view class="recommed-content">
            <view class="title">
              <wow-elip line="2">{{ item.name }}</wow-elip>
            </view>
            <view class="anchor-name">{{ item.anchorName }}</view>
            <view class="hot-box wow-flex is-align-middle">
              <image class="ico_hot" mode="aspectFill" src="../../images/live/ico_hot.png" lazy-load></image>
              <view class="font-size--24">{{ ListStatusWXS.hot(item.hot) }}热度</view>
            </view>
          </view>
        </view>
      </view>

      <video src="{{ videoLink }}" bindfullscreenchange="screenChange" id="videoId" style="opacity: {{videoOpacityStyle}}" class='video-center'></video>

    </view>
    <view class="live-empty" wx:if="{{ loading && list.length === 0}}">
      没有直播计划哦
    </view>
  </view>
</template>
<script>
import liveApis from '@/api/live'
import wepy from 'wepy'
import LiveList from '@/components/liveItem'
// eslint-disable-next-line no-undef
// var livePlayer = requirePlugin('live-player-plugin')
import wxutils from '@/utils/wxutils'
import LiveBi from '@/mixins/liveBi'
import ListStatusWXS from '../../wxs/liveStatus.wxs'
export default class Live extends wepy.page {
  config = {
    navigationBarTitleText: '直播',
    enablePullDownRefresh: true,
    usingComponents: {
      'subscribe': 'plugin-private://wx2b03c6e691cd7370/components/subscribe/subscribe',
      'wow-elip': '../../packages/elip/index'
    }
  }
  components = {
    liveList: LiveList
  }
  wxs = {
    ListStatusWXS: ListStatusWXS
  }
  events = {
    handleOnScreenVideo (item) {
      this.handleToScreenVideo(item)
    }
  }
  data = {
    roomList: [],
    loading: false,
    start: 1,
    limit: 5,
    hasMoreData: false,
    recommedList: [],
    videoLink: '',
    videoOpacityStyle: 0,
    videoContext: null
  }
  mixins = [ LiveBi ]
  methods = {
    handleScreenVideo (item) {
      this.handleToScreenVideo(item)
    },
    handleToCate () {
      wxutils.backOrNavigate('/pages/live/category')
    }
  }
  handleToScreenVideo (item) {
    this.videoContext = wx.createVideoContext('videoId')
    const { replyUrl, id } = item
    wx.showLoading({
      title: '加载中',
      mask: true
    })
    this.handleClickReplyLiveHot(id)
    this.videoOpacityStyle = 1
    this.videoLink = replyUrl
    this.videoContext.requestFullScreen()
    setTimeout(() => {
      this.videoContext.play()
      wx.hideLoading()
    }, 500)
  }
  screenChange (e) {
    this.videoContext = wx.createVideoContext('videoId')
    let fullScreen = e.detail.fullScreen
    if (!fullScreen) {
      this.videoOpacityStyle = 0
      this.videoContext.pause()
    }
    this.videoLink = null
  }
  onPullDownRefresh () {
    this.start = 1
    this.getLiveList()
    wx.nextTick(() => {
      wx.stopPullDownRefresh()
    })
  }
  onReachBottom () {
    if (this.hasMoreData) {
      this.getLiveList()
      wx.stopPullDownRefresh()
    }
  }
  async getLiveList () {
    wx.showLoading({ title: '加载中' })
    try {
      const { data } = await liveApis.liveRoomList()
      this.roomList = data
      let { start, limit, recommedList } = this
      const opts = {
        start,
        limit
      }
      const { data: recommedData } = await liveApis.highlights(opts)
      if (start === 1) {
        recommedList = []
      }
      this.recommedList = recommedList.concat(recommedData.data)
      this.hasMoreData = this.recommedList.length < recommedData.total
      if (this.hasMoreData) {
        this.start++
      }
      wx.hideLoading()
      this.$apply()
    } catch (e) {
      this.loading = true
      wx.hideLoading()
    }
  }
  onLoad () {
    this.videoContext = wx.createVideoContext('videoId')
    this.getLiveList()
  }
}
</script>
<style lang='postcss'>
 @import 'src/styles/pages/live/index.postcss';
</style>
