<template>
	<view class="category-conatiner">

		<view class="category-content wow-flex">
			<scroll-view scroll-y class="left-aside">
				<view
					wx:for="{{cateList}}"
					wx:key="index"
					class="aside-item"
          @tap.stop="handleChangeLiveType({{ item.liveType }})"
					:class="{'active': item.liveType === currentLiveType }">{{ item.name }}</view>
			</scroll-view>
			<scroll-view scroll-with-animation scroll-y class="right-aside" wx:if="{{ cateLiveData.length }}">
				<view class="category-item" wx:for="{{ cateLiveData }}">
          <view class="category-item__status">
            <text class="circle"></text>
            <text>{{ item.liveStatusText }}</text>
          </view>
          <view class="category-item__time font-size--26">
            {{ item.startTime }}
          </view>
          <wow-elip line="2" class="category-item__title font-size--28">
            {{ item.anchorName }}
          </wow-elip>
          <wow-elip line="2" class="category-item__content font-size--28">
            {{ item.name }}
          </wow-elip>
        </view>
			</scroll-view>
      <view class="empty-content" wx:else>暂无直播数据~</view>
		</view>

	</view>
</template>
<script>
import wepy from 'wepy'
import liveApis from '@/api/live'
const liveStatus = {
  101: '直播中',
  102: '即将开始', // 未开始
  103: '直播回放', // 已结束
  104: '禁播',
  105: '暂停中',
  106: '异常',
  107: '已过期'
}
export default class LiveCategory extends wepy.page {
  config = {
    navigationBarTitleText: '直播分类',
    usingComponents: {
      'wow-elip': '../../packages/elip/index'
    }
  }
  watch = {
    currentLiveType (val) {
      console.log(val)
      this.getCategoryDetail(val)
    }
  }
  data = {
    cateList: [],
    currentLiveType: '',
    start: 1,
    limit: 10,
    cateLiveData: [],
    hasMoreData: false
  }
  methods = {
    handleChangeLiveType (type) {
      this.currentLiveType = type
    }
  }
  async getCategoryDetail () {
    try {
      let { start, limit, cateLiveData, currentLiveType } = this
      const opts = {
        liveType: currentLiveType,
        start,
        limit
      }
      const { data } = await liveApis.listRoomByType(opts)
      if (start === 1) {
        cateLiveData = []
      }
      data.data.forEach(item => {
        item.liveStatusText = liveStatus[item.liveStatus]
      })
      this.cateLiveData = cateLiveData.concat(data.data)
      this.hasMoreData = this.cateLiveData.length < data.total
      if (this.hasMoreData) {
        this.start++
      }
      console.log(data)
      this.cateLiveData = data.data
      this.$apply()
    } catch (error) {
      console.log(error)
    }
  }
  onReachBottom () {
    if (this.hasMoreData) {
      this.getCategoryDetail()
      wx.stopPullDownRefresh()
    }
  }
  async getCategoryData () {
    try {
      wx.showLoading({
        title: '加载中',
        mask: true
      })
      const { data } = await liveApis.getLiveType()
      this.cateList = data
      this.currentLiveType = data[0].liveType
      wx.hideLoading()
      this.$apply()
    } catch (error) {
      console.log(error)
      wx.hideLoading()
    }
  }
  onLoad () {
    this.getCategoryData()
  }
}
</script>

<style lang="postcss" scoped>
.category-conatiner {
	width: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
	.category-content {
		min-height: 100vh;
	}
	.left-aside {
		position: fixed;
		flex-shrink: 0;
		width: 320rpx;
    height: 100%;
		background-color: #5e5e5e;
		.aside-item {
			display: flex;
			align-items: center;
			justify-content: center;
			width: 100%;
			height: 90rpx;
			font-size: 28rpx;
			color: #fff;
			position: relative;
      &::after {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 1rpx;
        transform: scaleY(0.5);
        background-color: #cfcfcf;
      }
      &.active {
        background-color: #fff;
        color: #373737;
      }
		}
	}
	.right-aside{
		flex: 1;
		overflow: hidden;
		background-color: #fff;
    padding-top: 6rpx;
    padding-left: 370rpx;
		.category-item {
			position: relative;
			padding: 40rpx 30rpx 30rpx 6rpx;
      &::after {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 1rpx;
        transform: scaleY(0.5);
        background-color: #cfcfcf;
      }
      &__status {
        padding: 6rpx 14rpx 8rpx 10rpx;
        color: #bb2867;
        border: 4rpx solid #bb2867;
        border-radius: 12rpx;
        display: inline-flex;
        align-items: center;
        font-weight: 600;
        margin-bottom: 14rpx;
        font-size: 30rpx;
        .circle {
          width: 18rpx;
          height: 18rpx;
          border-radius: 50%;
          background-color: #bb2867;
          margin-right: 8rpx;
        }
      }
      &__time {
        color: #cfcfcf;
        margin-bottom: 10rpx;
      }
      &__title {
        color: #373737;
        padding-bottom: 8rpx;
        display: block;
      }
      &__content {
        color: #373737;
      }
		}
	}
  .empty-content {
    flex: 1;
    margin: 60rpx 0;
    text-align: center;
  }
}
</style>
