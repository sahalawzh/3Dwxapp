
<template lang="wxml" miniapp="wepy">
  <view class="page-contain page-commet">
    <form bindsubmit="handleCreatCommet">
      <view class="commet-wrap">
        <view class="wow-flex is-align-middle satisfaction-row">
          <image class="icon-header" wx:if="{{image}}" mode="aspectFill" src="{{image}}">
            <!-- <open-data type="userAvatarUrl"></open-data> -->
          </image>
          <image class="icon-star" wx:for="{{stars.total}}" wx:key="index" @tap.stop="handleToStar({{'total'}}, {{index}})" src="../../images/common/btn_evaluate_{{item}}.png" mode="aspectFill"></image>
          <view class="font-size--28 satisfaction-row__label">满意度</view>
        </view>
        <view class="commet-content">
          <textarea class="font-size--28 commet-content__area" name="commet" maxlength="200" placeholder="宝贝喜欢吗？来跟大家分享一下吧~"/>
          <view class="commet-content__upload">
            <view class="upload-imgs wow-flex" wx:if="{{uploadImgs.length}}">
              <view class="upload-imgs__item" wx:for="{{uploadImgs}}" wx:key="index">
                <icon type="clear" size="20" class="upload-clear" @tap.stop="handleRemoveImg({{index}})"/>
                <image class="upload-img" @tap.stop="handleImagePreview({{index}})" src="{{item}}" mode="aspectFill"></image>
              </view>
            </view>
            <image class="icon-upload" @tap.stop="handleToUpload" src="../../images/common/btn_evaluate_addimg.png" mode="aspectFill"></image>
          </view>
        </view>

        <view class="commet-options">
          <view class="wow-flex is-align-middle option-row">
            <view class="font-size--28 label">物流信息</view>
            <image class="icon-star" wx:for="{{stars.logistics}}" wx:key="index" @tap.stop="handleToStar({{'logistics'}}, {{index}})" src="../../images/common/btn_evaluate_{{item}}.png" mode="aspectFill"></image>
          </view>
          <view class="wow-flex is-align-middle option-row">
            <view class="font-size--28 label">服务态度</view>
            <image class="icon-star" wx:for="{{stars.service}}" wx:key="index" @tap.stop="handleToStar({{'service'}}, {{index}})" src="../../images/common/btn_evaluate_{{item}}.png" mode="aspectFill"></image>
          </view>
        </view>
        <view class="footer">
          <button class="footer-btn font-size--28" form-type="submit">发布</button>
        </view>
      </view>

    </form>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import commetApis from '@/api/commet'
  import wxutils from '@/utils/wxutils'
  export default class PublishCommet extends wepy.page {
    config = {
      navigationBarTitleText: '发表评论'
    }
    data = {
      stars: {
        total: ['star_empty', 'star_empty', 'star_empty', 'star_empty', 'star_empty'],
        logistics: ['star_empty', 'star_empty', 'star_empty', 'star_empty', 'star_empty'],
        service: ['star_empty', 'star_empty', 'star_empty', 'star_empty', 'star_empty']
      },
      uploadImgs: [],
      spuId: '',
      oid: '',
      skuId: '',
      image: ''
    }
    onLoad ({spuId, oid, skuId}) {
      this.spuId = spuId
      this.oid = oid
      this.skuId = skuId
      wx.getStorage({
        key: 'spuImage',
        success: (res) => {
          this.image = res.data
        }
      })
    }
    async insertSpuComment (params) {
      try {
        wx.showLoading({
          title: '提交中',
          mask: true
        })
        await commetApis.insertSpuComment(params)
        wxutils.backOrRedirect('/pages/order/index')
        wx.hideLoading()
        this.$apply()
      } catch (error) {
        console.log(error)
        wx.hideLoading()
      }
    }
    methods = {
      handleImagePreview (idx) {
        wx.previewImage({
          current: this.uploadImgs[idx], // 当前预览的图片
          urls: this.uploadImgs // 所有要预览的图片
        })
      },
      handleCreatCommet (e) {
        let { commet } = e.detail.value
        let { total, logistics, service } = this.stars
        commet = commet.trim()
        let i = 0
        let errorMsg = ''
        let serviceScore = 0
        service.forEach(element => {
          if (element === 'star') {
            serviceScore++
          }
        })
        if (!serviceScore) {
          errorMsg = '还未选服务态度'
          i++
        }
        let logisticsScore = 0
        logistics.forEach(element => {
          if (element === 'star') {
            logisticsScore++
          }
        })
        if (!logisticsScore) {
          errorMsg = '还未选物流信息'
          i++
        }
        let totalScore = 0
        total.forEach(element => {
          if (element === 'star') {
            totalScore++
          }
        })
        if (!totalScore) {
          errorMsg = '还未选满意度'
          i++
        }
        if (!commet) {
          errorMsg = '评论信息不能为空'
          i++
        }
        if (i > 0) {
          return wx.showToast({
            title: errorMsg,
            icon: 'none'
          })
        }

        const { spuId, oid, skuId } = this
        let opts = {
          content: commet,
          spuId,
          totalScore,
          logisticsScore,
          serviceScore,
          orderNo: oid,
          skuId
        }
        if (this.uploadImgs.length) {
          wx.showLoading({
            title: '上传中',
            mask: true
          })
          let uploads = []
          this.uploadImgs.map((item, index) => {
            uploads[index] = new Promise((resolve, reject) => {
              wx.uploadFile({
                url: wepy.$instance.globalData.baseUrl + '/api/file/upload',
                filePath: item,
                name: 'file',
                header: {
                  'token': wepy.$instance.globalData.Token,
                  'Content-Type': 'multipart/form-data'
                },
                formData: {
                  'fileType': 0
                },
                success: function (res) {
                  resolve(JSON.parse(res.data).data)
                },
                fail: function (error) {
                  reject(error)
                }
              })
            })
          })
          Promise.all(uploads).then((result) => {
            let uploadsId = []
            let arr = [].concat.apply([], result)
            arr.forEach(element => {
              uploadsId.push(element.id)
            })
            if (result.length) {
              opts.imageIndex = uploadsId.join('_')
            }
            wx.hideLoading()
            this.insertSpuComment(opts)
          }).catch((err) => {
            console.log(err)
            wx.hideLoading()
            wx.showToast({
              title: '图片上传失败',
              icon: 'none'
            })
          })
        } else {
          this.insertSpuComment(opts)
        }
      },
      handleRemoveImg (index) {
        this.uploadImgs.splice(index, 1)
      },
      handleToStar (type, idx) {
        if (this.stars[type].length) {
          this.stars[type].forEach((item, index) => {
            idx >= index ? this.stars[type][index] = 'star' : this.stars[type][index] = 'star_empty'
          })
        }
      },
      async handleToUpload () {
        const that = this
        wx.chooseImage({
          count: 5,
          success: function(res) {
            const { errMsg, tempFilePaths, tempFiles } = res
            if (errMsg === 'chooseImage:ok') {
              const MAXSIZE = 2000000
              let isLimit = tempFiles.some(item => item.size > MAXSIZE)
              if (isLimit) {
                wx.showToast({
                  title: '上传图片不能大于2M!',
                  icon: 'none'
                })
              } else {
                const MAX = 5
                const images = that.uploadImgs.concat(tempFilePaths)
                that.uploadImgs = images.length <= MAX ? images : images.slice(0, MAX)
                that.$apply()
              }
            }
          }
        })
      }
    }
    onUnload () {
      wx.removeStorage({
        key: 'spuImage'
      })
    }
    onHide () {
    }
    onShow () {
    }
  }
</script>
<style lang='postcss'>
  @import 'src/styles/pages/publishCommet/common.postcss';
</style>
