
<template lang="wxml" miniapp="wepy">
  <view class="page-contain pages-detail__video">
    <!-- 视频 -->
    <view class="video-box">
      <video
        custom-cache="{{false}}"
        class="video-box__control"
        id="myVideo"
        src="{{info.video}}"
        poster="{{initTime > 0 ? '' : info.image}}"
        title="{{info.title}}"
        initial-time="{{initTime}}"
        vslide-gesture="{{true}}"
        bindtimeupdate="handleRecordTime"
      >
        <navigator url="/pages/index/index" hover-class="none" open-type="switchTab" class="icon-mall">
          <cover-image class="icon" src="../../images/detail/icon-mall.png" mode="aspectFill"></cover-image>
        </navigator>
      </video>
    </view>

    <view class="video-resource wow-flex is-justify-end is-align-middle" wx:if="{{ info.play.length }}">
      <view wx:for="{{info.play}}" wx:key="index" @tap.stop="handleTogglePlay({{ item }}, {{ index }})" class="video-resource__item font-size--24 {{item.videoActive ? 'active' : ''}}">{{ item.definition }}</view>
    </view>


    <view class="video-detail">
      <!-- 视频内容 -->
      <view class="video-content">
        <view class="title font-size--30">{{info.title}}</view>
        <view class="desc">{{info.description}}</view>
        <view class="topic wow-flex">
          <navigator wx:for="{{info.topic}}" wx:key="item" url="/pages/videoList/index?topicId={{item.id}}&topicName={{item.topic}}" class="wow-flex topic-item is-align-middle font-size--26">
            <image class="icon" src="../../images/common/ico_Topics_select.png" mode="aspectFill"></image>
            <view>{{item.topic}}</view>
          </navigator>
        </view>
        <!-- 悬浮 -->
        <view class="suspend-box">
          <!-- 观看次数 -->
          <view class="suspend-box__item">
            <image class="icon" src="../../images/common/ico_seetime_big_black.png" mode="aspectFill"></image>
            <view class="font-size--24">{{info.hot}}</view>
          </view>
        </view>
      </view>

      <view class="print-wrap" wx:if="{{printer}}">
        <!-- 相关产品 -->
        <view class="print-box">
          <view class="title">使用的打印机</view>
          <navigator url="/pages/detail/index?id={{printer.id}}" hover-class="none" class="print-box__item wow-flex">
            <image class="print-box__item-img" src="{{printer.image}}" mode="aspectFill"></image>
            <view class="print-box__item-info">
              <wow-elip line="2" class="name">{{printer.title}}</wow-elip>
              <wow-elip line="2" class="desc">{{printer.info}}</wow-elip>
              <view class="color-price price font-size--26">{{printer.text}}</view>
            </view>
          </navigator>
        </view>

      </view>
    </view>

    <!-- 商品 -->
    <view class="product" wx:if="{{info.spuVO.length}}">
      <view class="font-size--26 title">相关商品</view>
      <view class="products-layout">
        <view class="mall-scroll-content">
          <scroll-view 
            class="mall-scroll"
            scroll-x="true">
            <navigator url="/pages/detail/index?id={{item.id}}" class="scroll-view-item" wx:for="{{info.spuVO}}" wx:key="item">
              <view class="product-item">
                <view class="product-item__img">
                  <image mode="aspectFill" src="{{item.image}}"></image>
                </view>
                <view class="product-item__info">
                  <view class="product-name font-size--28">
                    <view class="elip">{{item.title}}</view>
                  </view>
                  <view class="font-size--24 product-price color-price">￥{{item.recommendedPrice}}</view>
                </view>
              </view>
            </navigator>
          </scroll-view>
        </view>
      </view>
    </view>

    <view class="cut"></view>
    <!-- 评论 -->
    <commet
      :isShowCommetInput.sync="isShowCommetInput"
      :userId.sync="userId"
      :commetList.sync="commetList"
      :commetTotal.sync="commetTotal"
    ></commet>

    <view class="controls wow-flex is-justify-space-between" wx:if="{{ isShowControls }}">
      <image wx:if="{{ userId }}" @tap.stop="handleShowCommetInput" class="icon" src="../../images/common/ico_comment.png" mode="aspectFill"></image>
      <button wx:else data-type="videoCommet" open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber" class="auth-btn open-type-btn">
        <image class="icon" src="../../images/common/ico_comment.png" mode="aspectFill"></image>
      </button>
      <view class="wow-flex">
        <image @tap.stop="handleShareItems" class="icon ico_share" src="../../images/common/ico_share.png" mode="aspectFill"></image>
        <view class="collect-box">
          <view class="collect-num font-size--24" wx:if="{{collectionNum}}">{{collectionNum}}</view>
          <image wx:if="{{userId}}" @tap.stop="handleToCollect" class="icon" src="../../images/common/btn_collection{{ isCollection === 1 ? '_on' : ''}}.png" mode="aspectFill"></image>
          <button wx:else data-type="collect" open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber" class="auth-btn open-type-btn">
            <image class="icon" src="../../images/common/btn_collection.png" mode="aspectFill"></image>
          </button>
        </view>
      </view>
    </view>

    <!-- 分享 -->
    <share></share>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import videoApis from '../../api/video'
  import collectApis from '../../api/collect'
  import commetApis from '../../api/commet'
  import shareApis from '../../api/share'
  import Commet from '../../components/commet'
  import Share from '../../components/share'
  import CommonMixin from '../../mixins/common'
  import { timeHandle } from '../../utils/commentTimeHandle'
  import { parseQueryString } from '../../utils/utils'
  export default class VideoDetail extends wepy.page {
    config = {
      navigationBarTitleText: '',
      usingComponents: {
        'wow-popup': '../../packages/popup/index',
        'wow-elip': '../../packages/elip/index'
      }
    }
    mixins = [CommonMixin]
    components = {
      commet: Commet,
      share: Share
    }
    data = {
      id: '',
      info: {},
      userId: '',
      commetList: [],
      commetTotal: '',
      sendInfo: '',
      collectionNum: '',
      printer: '',
      isShowCommetInput: false,
      isShowControls: true,
      networkType: '',
      initTime: 0,
      currentTime: 0,
      poster: '',
      posterStatus: false,
      isCollection: 0
    }
    methods = {
      handleTogglePlay (item, index) {
        if (item.videoActive) return
        this.info.play.forEach(element => {
          element.videoActive = false
        })
        this.info.play[index].videoActive = true
        this.info.video = item.url
        this.initTime = this.currentTime
        const that = this
        wx.nextTick(() => {
          wx.showToast({
            title: item.definition,
            icon: 'success',
            success: function () {
              setTimeout(() => {
                wx.hideToast()
                that.videoContext.play()
              }, 2000)
            }
          })
        })
        this.$apply()
      },
      handleShowCommetInput () {
        this.handleVideoCommet()
      },
      handleToCollect () {
        this.handleCollect()
      },
      handleShareItems () {
        this.$broadcast('handleShowSharePopup')
      }
    }
    async getSharePoster () {
      try {
        wx.showLoading({
          title: '生成中',
          mask: true
        })
        const opts = {
          type: 'video',
          id: this.id,
          page: 'pages/videoDetail/index',
          scene: `id=${this.id}`
        }
        const { data } = await shareApis.createSharePoster(opts)
        this.poster = data
        this.$wxpage.selectComponent('.wow_share').hide()
        this.posterStatus = true
        wx.previewImage({
          current: data,
          urls: [data]
        })
        wx.hideLoading()
        this.$apply()
      } catch (error) {
        console.log(error)
        wx.hideLoading()
      }
    }
    events = {
      handleSharePoster () {
        this.getSharePoster()
      },
      handleCloseCommetMask () {
        this.isShowCommetInput = false
        this.isShowControls = true
      },
      handleGetInfo (val) {
        this.sendInfo = val
      },
      async handleSendInfo () {
        try {
          if (!this.sendInfo) return
          wx.showLoading({
            title: '发送中',
            mask: true
          })
          const { userId, info, sendInfo } = this
          const opts = {
            userId,
            videoId: info.id,
            content: sendInfo
          }
          await commetApis.addVideoComment(opts)
          this.sendInfo = ''
          this.$broadcast('handleClearInput', this.sendInfo)
          this.getVideoComment()
          wx.hideLoading()
          this.$apply()
        } catch (error) {
          wx.hideLoading()
        }
      }
    }
    handleRecordTime (e) {
      const { currentTime } = e.detail
      this.currentTime = currentTime
    }
    onShareAppMessage () {
      const { id, info } = this
      this.$wxpage.selectComponent('.wow_share').hide()
      this.getShareNum()
      return {
        title: info.title,
        imageUrl: info.image,
        path: 'pages/videoDetail/index?id=' + id
      }
    }
    async getShareNum () {
      try {
        const { data } = await videoApis.updateShareVideo({videoId: this.id})
        this.info.share = data.num
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async getTheVideoCollection () {
      try {
        const { id } = this
        const opts = {
          videoId: id
        }
        const { data } = await collectApis.getTheVideoCollection(opts)
        this.isCollection = data.isCollection
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async getSpuCollectionNum () {
      try {
        const { id } = this
        const opts = {
          videoId: id
        }
        const { data } = await collectApis.getVideoCollectionNum(opts)
        this.collectionNum = data.num
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async handleCollect (e) {
      try {
        const { id } = this
        this.userId = e
        const opts = {
          videoId: id
        }
        const { data, msg } = await collectApis.addVideoCollection(opts)
        this.isCollection = data.isCollection
        this.collectionNum = data.num
        wx.showToast({
          title: msg,
          duration: 1000
        })
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async getPrintByVideoId () {
      try {
        const { id } = this
        const opts = {
          videoId: id
        }
        const { data } = await videoApis.getPrintByVideoId(opts)
        this.printer = data
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    handleVideoCommet (e) {
      if (e) {
        wepy.$instance.globalData.userId = e
        this.userId = e
      }
      this.isShowControls = false
      this.isShowCommetInput = true
      this.$apply()
    }
    async getVideoDetail (id) {
      try {
        const opts = {
          id
        }
        const { data } = await videoApis.detail(opts)
        wx.hideLoading()
        this.info = data
        wx.setNavigationBarTitle({
          title: decodeURIComponent(data.title)
        })
        if (data.play.length > 1) {
          data.video = this.networkType === 'wifi' ? data.play[1].url : data.play[0].url
          data.play[1].videoActive = this.networkType === 'wifi'
          data.play[0].videoActive = this.networkType !== 'wifi'
        } else {
          data.play[0].videoActive = true
        }
        wepy.$instance.globalData.subpub.on('collect', this.handleCollect, this)
        wepy.$instance.globalData.subpub.on('videoCommet', this.handleVideoCommet, this)
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async getVideoComment () {
      try {
        const opts = {
          videoId: this.id || this.info.id
        }
        const { data: commetData } = await commetApis.getVideoComment(opts)
        commetData.data.length && commetData.data.forEach(item => {
          item.createTime = timeHandle(item.createTime.replace(/-/g, '/'))
        })
        this.commetList = commetData.data
        this.commetTotal = commetData.total
        this.isShowCommetInput = false
        this.isShowControls = true
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    onLoad (options) {
      if (options.scene) {
        let sceneObj = decodeURIComponent(options.scene)
        let urlObj = 'url?' + sceneObj
        options = parseQueryString(urlObj)
      }
      this.id = options.id
      this.videoContext = wx.createVideoContext('myVideo')
      this.getVideoDetail(options.id)
      this.getVideoComment()
      this.getSpuCollectionNum()
      this.getPrintByVideoId()
      this.getTheVideoCollection()
    }
    onUnload () {
    }
    onHide () {
    }
    onShow () {
      const that = this
      wx.getNetworkType({
        success (res) {
          that.networkType = res.networkType
        }
      })
      if (wepy.$instance.globalData.userId) {
        this.userId = wepy.$instance.globalData.userId
      }
    }
  }
</script>
<style lang='postcss'>
  @import 'src/styles/pages/videoDetail/common.postcss';
</style>
