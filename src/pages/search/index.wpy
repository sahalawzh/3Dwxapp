
<template lang="wxml" miniapp="wepy">
  <view class="page-contain pages-search">
    <view class="opertion-box">
      <view class="search-sign wow-flex is-align-middle">
        <view class="font-size--28 drop-box" wx:if="{{lastpage === 'index'}}" @tap.stop="handleToggleDrop">{{dropVal.val}}<text class="down"></text></view>
        <view class="select-box font-size--28" wx:if="{{isShowDrop}}">
          <view class="select-item" wx:for="{{arr}}" wx:key="index" @tap.stop="handleSelectItem({{item}})">{{item.val}}<text class="down" wx:if="{{index === 0}}"></text></view>
        </view>
        <input type="text"
          confirm-type="search"
          placeholder="搜索一下"
          auto-focus
          bindconfirm="handleToSearch"
          value="{{searchVal}}"
          class="control font-size--28"/>
      </view>
    </view>

    <view class="goods" wx:if="{{lists.length}}">
      <block wx:if="{{lastpage === 'index'}}">
        <videoList :lists.sync="lists" :listImage.sync="listImage" wx:if="{{dropVal.id !== -2}}"></videoList>
        <forumList :lists.sync="lists" wx:else></forumList>
      </block>
      <view wx:else class="goods-list">
        <goodList :list.sync="lists" :listImage.sync="listImage"></goodList>
      </view>
    </view>

    <block wx:else>
      <view class="history-box">
        <view class="font-size--28 history-box__empty" wx:if="{{searchVal}}">没有找到相关{{lastpage === 'index' ? '视频' : '商品'}}</view>
        <view class="title font-size--28" wx:if="{{searchList.length}}">
          <text>历史搜索</text>
          <image class="btn-delete" src="../../images/common/btn_delete.png" mode="aspectFill" @tap.stop="handleDelHistory()"></image>
        </view>
        <view class="history-box__info wow-flex is-align-middle">
          <view class="item font-size--26 wow-flex is-align-middle" @tap.stop="handleToFind({{item}})" wx:for="{{searchList}}" wx:key="item">{{item}}</view>
        </view>
      </view>
      <view class="hot-box {{searchList.length === 0 ? 'no-search' : ''}}">
        <view class="hot-title font-size--28" wx:if="{{hotList.length}}">搜索发现</view>
        <view class="hot-content wow-flex">
          <view class="font-size--26 hot-content__item" @tap.stop="handleToFind({{item}})" wx:for="{{hotList}}" wx:key="item">{{item}}</view>
        </view>
      </view>
    </block>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import goodsApis from '@/api/goods'
  import GoodList from '@/components/goodList'
  import VideoList from '@/components/videoList'
  import ForumList from '@/components/forumList'
  import videoApis from '@/api/video'
  export default class Search extends wepy.page {
    config = {
      navigationBarTitleText: '搜索',
      usingComponents: {
        'wow-popup': '../../packages/popup/index'
      }
    }
    components = {
      goodList: GoodList,
      videoList: VideoList,
      forumList: ForumList
    }
    data = {
      searchVal: '',
      start: 1,
      limits: 20,
      lists: [],
      hasMoreData: false, // 默认不用拉数据
      searchList: [],
      hotList: [],
      lastpage: '',
      // arr: [
      //   {
      //     id: -2,
      //     val: '话题'
      //   },
      //   {
      //     id: 0,
      //     val: '创意'
      //   },
      //   {
      //     id: 1,
      //     val: '课程'
      //   }
      // ],
      arr: [
        {
          id: -2,
          val: '话题'
        },
        {
          id: 0,
          val: '视频'
        }
      ],
      dropVal: {
        id: -2,
        val: '话题'
      },
      isShowDrop: false,
      listImage: {
        imageWidth: 0,
        imageHeight: 0,
        imageQuality: 100
      }
    }
    handleToSearch (e) {
      const { value } = e.detail
      this.searchVal = value
      if (this.searchVal) {
        this.getSearchData()
        this.start = 1
      } else {
        this.lists = []
      }
    }
    async getSearchData () {
      try {
        wx.showLoading({
          title: '加载中...',
          mask: true
        })
        let { start, limits, lists, lastpage, dropVal } = this
        const opts = {
          start,
          limits
        }
        opts.key = this.searchVal
        let searchData
        if (lastpage === 'index') {
          opts.videoType = dropVal.id
          const { data: videoData } = await videoApis.listVideoVO(opts)
          searchData = videoData.data
        } else {
          const { data: goodData } = await goodsApis.queryShoppingByName(opts)
          searchData = goodData.data
        }
        if (start === 1) {
          lists = []
        }
        this.lists = lists.concat(searchData)
        console.log(this.lists)
        if (searchData.length < limits) {
          this.hasMoreData = false
        } else {
          this.hasMoreData = true
          this.start++
        }
        wx.hideLoading()
        this.$apply()
      } catch (error) {
        console.log(error)
        wx.hideLoading()
      }
    }
    async getHistorySearch () {
      try {
        let data
        if (this.lastpage === 'index') {
          const { data: videoData } = await videoApis.getVideoHistorySearch()
          data = videoData
        } else {
          const { data: goodData } = await goodsApis.getHistorySearch()
          data = goodData
        }
        this.searchList = data
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async getHeatSearch () {
      try {
        let data
        if (this.lastpage === 'index') {
          const { data: videoHeatData } = await videoApis.getVideoHeatSearch()
          data = videoHeatData
        } else {
          const { data: goodHeatData } = await goodsApis.getHistorySearch()
          data = goodHeatData
        }
        this.hotList = data
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    async removeAllHistorySearch () {
      try {
        await goodsApis.removeAllHistorySearch()
        this.searchList = []
        this.$apply()
      } catch (error) {
        console.log(error)
      }
    }
    methods = {
      handleSelectItem (item) {
        this.dropVal = item
        this.isShowDrop = false
        if (this.searchVal) {
          this.start = 1
          this.getSearchData()
        }
      },
      handleToggleDrop () {
        this.isShowDrop = true
      },
      handleDelHistory () {
        const that = this
        wx.showModal({
          title: '提示',
          content: '您确定删除全部历史记录？',
          success(res) {
            if (res.confirm) {
              that.removeAllHistorySearch()
            }
          }
        })
      },
      handleToFind (val) {
        if (val) {
          this.searchVal = val
          this.getSearchData()
        }
      }
    }
    handleImageQuality () {
      this.listImage.imageWidth = Math.ceil((wx.windowWidth * 2 - 52 * 2) * wx.rpx2px)
      this.listImage.imageHeight = Math.ceil(251 * wx.rpx2px * 2)
      this.listImage.imageQuality = wx.imageQuality
    }
    onLoad ({ form }) {
      this.lastpage = form
      if (wepy.$instance.globalData.Token) {
        this.getHistorySearch()
      }
      this.getHeatSearch()
      this.handleImageQuality()
    }

    onReachBottom () {
      if (this.hasMoreData) {
        this.getSearchData()
      }
    }
    onShow () {
    }
  }
</script>
<style lang='postcss'>
  @import 'src/styles/pages/search/common.postcss';
</style>
